# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
project_name: "Crunchatize"

# A short tagline to show in search.
tagline: "Turn any chat into a simple, stat-based RPG."

creator_notes: "
Can't enjoy an organic role-playing narrative without the thrill of meta-gaming?<br>
Worried you'll develop genuine feelings or accidentally exercise thought-provoking introspection if numbers and probabilities aren't artificially injected into your every experience?<br>
Why endure some meaningless simulacrum of our equally meaningless reality when you can turn everything into a game of chance?<br>
Crunchatize could be the stage for you! Or not. It's something for somebody, though!<br>
<br>
**What's it do?**<br>
Adding this stage to a chat will cause your every input to be distilled into a skill check against one of eight attributes. 
Dice will be rolled and modifiers added to determine whether you succeed or fail.
<br><br>
Unlike most chats, where you don't want the bot to speak or act for your character, 
this stage requires you to forfeit some agency over the details of your actions; 
the bot will be specifically instructed to take your skill check result and paraphrase your choices as it narrates, rather than accept your input as canon. 
As a result, you may find you are better off simply describing the nature of the action you intend to take, rather than specifying precise words or actions.
<br><br>
The Stage vaguely follows Powered by the Apocalypse system rules, where 2d6 are rolled and modifiers added or subtracted to arrive at 
one of three degrees of success. Failures grant experience, which slowly leads to a level up--increasing one of the stats you used 
most during that level. And that's about it!
<br><br>
There are eight stats, and they are all a bit nebulous and overlapping:<br>
 * Might - Strength and endurance<br>
 * Grace - Agility and composure<br>
 * Skill - Craft and deftness<br>
 * Brains - Knowledge and logic<br>
 * Wits - Instinct and awareness<br>
 * Charm - Allure and influence<br>
 * Heart - Determination and empathy<br>
 * Luck - Chance and fortune<br>
<br>
You can view console output to see the classification results that the stage is using to arrive at its skill and difficulty assessments. 
These are zero-shot classifications, which are pretty naive and lack significant context; I am continuing to tweak and improve, 
but it is pretty easy to skew the results through the language you use in your input.
<br><br>
I've tagged the stage NSFW, but there isn't really anything in here that isn't SFW. My example bot isn't, though, and I'm sure other bots that attach this stage won't be either.
<br><br>
**What's next:**<br>
I could add some basic health tracking, or some form of character creation that builds upon your persona somehow. 
Most of my other ideas will have to wait for future Stage improvements, but I'm happy to receive feedback regardless!
"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PUBLIC'

# 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
# 'COVER' will, indeed, cover the chat history completely,
#   but leave the text input box.
# 'FULLSCREEN' will make nothing below the header bar
#   show except for your stage.
position: 'NONE'

# Self-explanatory.
tags:
  - 'NSFW'
  - 'Stage'
  - 'Extension'
  - 'Add-on'
  - 'RPG'
  - 'WIP'

needs_config:
  false

config_schema:
  title: Crunchatize Configuration
  type: object
  properties:
    debugMode:
      label: Debug Mode
      type: boolean
      default: false

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  init:
    type: object
    properties:
      grid:
        type: string
  message:
    type: object
    properties:
      angry:
        type: boolean
        default: true
  chat:
    type: object
    properties:
      visited:
        type: array
        items:
          type: integer

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.


github_path: 'https://github.com/Lord-Raven/Crunchatize'


extension_id: 'crunchatize-77a78ffcc6a6'

